{"version":3,"file":"static/js/77.109cf15e.chunk.js","mappings":"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","sources":["webpack://myportfolio/./src/components/SignUpForm/SignUpForm.module.css?655f","components/SignUpForm/SignUpForm.jsx","webpack://myportfolio/./src/components/SignInForm/SignInForm.module.css?03fb","components/SignInForm/SignInForm.jsx","pages/AuthorizationPage/AuthorizationPage.jsx","pages/VerifyEmailPage/VerifyEmailPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerSignUp\":\"SignUpForm_containerSignUp__j2vC7\",\"formInput\":\"SignUpForm_formInput__jpXJV\",\"hasContent\":\"SignUpForm_hasContent__l61uo\",\"boxBtnSignIn\":\"SignUpForm_boxBtnSignIn__GK5sF\",\"buttonSignIn\":\"SignUpForm_buttonSignIn__pfWi7\",\"errorMessage\":\"SignUpForm_errorMessage__LOC0B\"};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"./SignUpForm.module.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerThunk } from \"../../redux/auth/authThunks\";\r\nimport  AuthStatus  from \"../../constants/userRolesEnum\";\r\nimport { setAuthSwitchToShow } from \"../../redux/auth/authReducer\";\r\n\r\n//реєсрація користувача в системі (ввод нового користувача користувача)\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Використання useFormik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      login: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      login: Yup.string()\r\n        .min(2, \"Name must be at least 2 characters\") // Мінімум 2 символи\r\n        .max(50, \"Name must be less than 50 characters\") // Максимум 50 символів\r\n        .required(\"Enter your login\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\") // Перевірка на валідну пошту\r\n        .required(\"Email is required\"), // Поле обов'язкове\r\n      password: Yup.string()\r\n        .min(8, \"Password must be at least 8 characters\") // Мінімум 8 символів\r\n        .matches(/[A-Z]/, \"Must contain at least one uppercase letter\") // Мінімум одна велика літера\r\n        .matches(/[a-z]/, \"Must contain at least one lowercase letter\") // Мінімум одна маленька літера\r\n        .matches(/[0-9]/, \"Must contain at least one number\") // Мінімум одна цифра\r\n        .required(\"Password is required\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\") // Перевірка на співпадіння\r\n        .required(\"Confirm Password is required\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      sendNewUserToDatabase(values);\r\n      // console.log(\"Form data:\", values);\r\n      resetForm(); // Очищення форми після відправки\r\n    },\r\n  });\r\n\r\n  function sendNewUserToDatabase(dataUser) {\r\n    const { login, email, password } = dataUser;\r\n\r\n    const newUser = {\r\n      login: login.trim(),\r\n      email: email.trim(),\r\n      password: password.trim(),\r\n    };\r\n\r\n    dispatch(registerThunk(newUser));\r\n    dispatch(setAuthSwitchToShow(AuthStatus.Registered));\r\n  }\r\n\r\n  return (\r\n    <form className={styles.containerSignUp} onSubmit={formik.handleSubmit}>\r\n      {/* Поле login */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.login ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          id=\"login\"\r\n          name=\"login\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.login}\r\n          required\r\n        />\r\n        <label htmlFor=\"login\">Login</label>\r\n        {formik.touched.login && formik.errors.login && (\r\n          <p className={styles.errorMessage}>{formik.errors.login}</p>\r\n        )}\r\n      </div>\r\n      {/* Поле Email */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.email ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.email}\r\n          required\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        {formik.touched.email && formik.errors.email && (\r\n          <p className={styles.errorMessage}>{formik.errors.email}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Поле Password */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.password ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.password}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        {formik.touched.password && formik.errors.password && (\r\n          <p className={styles.errorMessage}>{formik.errors.password}</p>\r\n        )}\r\n      </div>\r\n      {/* Поле confirm Password */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.confirmPassword ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.confirmPassword}\r\n          required\r\n        />\r\n        <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n        {formik.touched.confirmPassword && formik.errors.confirmPassword && (\r\n          <p className={styles.errorMessage}>{formik.errors.confirmPassword}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Кнопка Submit */}\r\n      <div className={styles.boxBtnSignIn}>\r\n        <button className={styles.buttonSignIn} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"containerSignIn\":\"SignInForm_containerSignIn__OOt1-\",\"formInput\":\"SignInForm_formInput__4Qjik\",\"hasContent\":\"SignInForm_hasContent__mw5Iu\",\"boxBtnSignIn\":\"SignInForm_boxBtnSignIn__ijPLB\",\"buttonSignIn\":\"SignInForm_buttonSignIn__oPL9p\",\"errorMessage\":\"SignInForm_errorMessage__rtwMH\"};","import React from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"./SignInForm.module.css\";\r\n// import { requestLogin } from \"../../API/Auth/fetchRegisterUser\";\r\n\r\n//авторизація користувача в системі(вхід)\r\nconst SignInForm = () => {\r\n  // const dispatch = useDispatch();\r\n\r\n  // Використання useFormik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\") // Перевірка на валідну пошту\r\n        .required(\"Email is required\"), // Поле обов'язкове\r\n      password: Yup.string()\r\n        .min(8, \"Password must be at least 8 characters\") // Мінімум 8 символів\r\n        .matches(/[A-Z]/, \"Must contain at least one uppercase letter\") // Мінімум одна велика літера\r\n        .matches(/[a-z]/, \"Must contain at least one lowercase letter\") // Мінімум одна маленька літера\r\n        .matches(/[0-9]/, \"Must contain at least one number\") // Мінімум одна цифра\r\n        .required(\"Password is required\"), // Поле обов'язкове\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(\"Form data:\", values);\r\n      authenticationWithData(values);\r\n      resetForm(); // Очищення форми після відправки\r\n    },\r\n  });\r\n\r\n  // ф-ція отримує логін та пароль користувача\r\n  function authenticationWithData(userData) {\r\n    // const user = {\r\n    //   email: userData.email.trim(),\r\n    //   password: userData.password.trim(),\r\n    // }\r\n    // dispatch(requestLogin(user));\r\n  }\r\n\r\n  return (\r\n    <form className={styles.containerSignIn} onSubmit={formik.handleSubmit}>\r\n      {/* Поле Email */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.email ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.email}\r\n          required\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        {formik.touched.email && formik.errors.email && (\r\n          <p className={styles.errorMessage}>{formik.errors.email}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Поле Password */}\r\n      <div\r\n        className={`${styles.formInput} ${\r\n          formik.values.password ? styles.hasContent : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\r\n          value={formik.values.password}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        {formik.touched.password && formik.errors.password && (\r\n          <p className={styles.errorMessage}>{formik.errors.password}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Кнопка Submit */}\r\n      <div className={styles.boxBtnSignIn}>\r\n        <button className={styles.buttonSignIn} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './AuthorizationPage.css';\r\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\r\nimport SignInForm from \"../../components/SignInForm/SignInForm\";\r\nimport VerifyEmailPage from \"../VerifyEmailPage/VerifyEmailPage\";\r\nimport  AuthStatus  from \"../../constants/userRolesEnum\";\r\nimport { selectAuthSwitchToShow } from '../../redux/auth/authSelectors';\r\nimport { setAuthSwitchToShow } from \"../../redux/auth/authReducer\";\r\n\r\nconst AuthorizationPage = () => {\r\n  const authPageToShow = useSelector(selectAuthSwitchToShow);\r\n  const dispatch = useDispatch();\r\n  \r\n  console.log(\"@@@@@@@@@@@@@authPageToShow\");\r\n  console.log(authPageToShow);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"@@@@@@@@@@@@@authPageToShow\");\r\n    console.log(authPageToShow);\r\n  }, [authPageToShow]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"authorizationContainerMain\">\r\n        <div className=\"info\">Authorization in the development process!!!</div>\r\n        {authPageToShow !== AuthStatus.Registered ? (\r\n          <div className=\"authorizationContainer\">\r\n            <div className=\"tabs\">\r\n              <Link\r\n                to=\"SignIn\"\r\n                className={`${\"tab\"} ${\r\n                  authPageToShow === AuthStatus.LogIn ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => dispatch(setAuthSwitchToShow(AuthStatus.LogIn))}\r\n              >\r\n                SIGN IN\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"SignUp\"\r\n                className={`${\"tab\"} ${\r\n                  authPageToShow === AuthStatus.LogUp ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => dispatch(setAuthSwitchToShow(AuthStatus.LogUp))}\r\n              >\r\n                SIGN UP\r\n              </Link>\r\n            </div>\r\n            <div className=\"content\">\r\n              {authPageToShow === AuthStatus.LogIn && <SignInForm />}\r\n              {authPageToShow === AuthStatus.LogUp && <SignUpForm />}\r\n              {/* {authenticated && <UserInfo/>} */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <VerifyEmailPage />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthorizationPage\r\n","import React from 'react';\r\nimport {  useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate  } from \"react-router-dom\"; \r\nimport './VerifyEmailPage.css';\r\nimport AuthStatus from \"../../constants/userRolesEnum\";\r\nimport { setAuthSwitchToShow } from \"../../redux/auth/authReducer\";\r\n\r\nconst VerifyEmailPage = () => {\r\n    const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  \r\n    const handleSignInClick = () => {\r\n      dispatch(setAuthSwitchToShow(AuthStatus.LogIn));\r\n      navigate(\"/AuthorizationPage/SignIn\"); // Переходимо на сторінку SignIn\r\n    };\r\n\r\n  return (\r\n    <div className=\"verifyEmailContainer\">\r\n      <div className=\"VerifyEmailText\">\r\n        Please confirm your email by clicking the link in the email. Once\r\n        confirmed, you will be able to log in using your credentials.\r\n        <Link\r\n          to=\"SignIn\"\r\n          className=\"signInLink\"\r\n          onClick={handleSignInClick}\r\n        >\r\n          Sign in here\r\n        </Link>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmailPage\r\n"],"names":["SignUpForm","dispatch","useDispatch","formik","useFormik","initialValues","login","email","password","confirmPassword","validationSchema","Yup","min","max","required","matches","oneOf","onSubmit","values","_ref","resetForm","dataUser","newUser","trim","registerThunk","setAuthSwitchToShow","AuthStatus","Registered","sendNewUserToDatabase","_jsxs","className","styles","handleSubmit","children","_jsx","type","id","name","onChange","handleChange","onBlur","handleBlur","value","htmlFor","touched","errors","SignInForm","console","log","AuthorizationPage","authPageToShow","useSelector","selectAuthSwitchToShow","useEffect","_Fragment","Link","to","LogIn","onClick","LogUp","VerifyEmailPage","navigate","useNavigate","handleSignInClick"],"sourceRoot":""}