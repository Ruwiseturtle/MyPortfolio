{"version":3,"file":"static/js/706.9fed5fcc.chunk.js","mappings":"+IACA,QAA0C,sDAA1C,EAAwH,oDAAxH,EAA+L,+CAA/L,EAA0P,wCAA1P,EAA8S,wCAA9S,EAAmW,yCAAnW,EAA8Z,8CAA9Z,EAA8d,8CAA9d,EAA2hB,2C,0CCM3hB,MA+EA,EA/E6BA,KAK3B,MAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,IAGZC,iBAAkBC,EAAAA,GAAW,CAC1BF,SAAUE,EAAAA,KACFC,IAAI,EAAG,0CACPC,QAAQ,QAAS,8CACjBA,QAAQ,QAAS,8CACjBA,QAAQ,QAAS,oCACjBC,SAAS,0BAEpBC,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,GAOlCE,eAA+BV,GAC7BW,QAAQC,IAAI,gDACZD,QAAQC,IAAIZ,GAEZ,IACEW,QAAQC,IAAI,4CACZC,EAAAA,OAAOC,QAAQ,OAKjB,CAAE,MAAOC,GACPJ,QAAQI,MAAM,4BAA6BA,EAE7C,CACF,CArBIC,CAAgBT,EAAOP,UAEvBS,GAAW,IAqBf,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA+BC,SAAA,EAE7CC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA6BC,SAAC,wBAC9CC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAwBC,UACtCH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAkBb,SAAUT,EAAOyB,aAAaF,SAAA,EAC/DH,EAAAA,EAAAA,MAAA,OACEC,UAAW,GAAGC,KACZtB,EAAOU,OAAOgB,MAAQJ,EAAoB,KACzCC,SAAA,EAEHC,EAAAA,EAAAA,KAAA,SACEG,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOP,SACrBK,UAAQ,KAEVgB,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,WAAUZ,SAAC,aACzBvB,EAAOoC,QAAQjC,UAAYH,EAAOqC,OAAOlC,WACxCqB,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAoBC,SAAEvB,EAAOqC,OAAOlC,eAItDqB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAuBC,UACrCC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAwBK,KAAK,SAAQJ,SAAC,kBAM3D,C","sources":["webpack://myportfolio/./src/pages/EnterNewPasswordPage/EnterNewPasswordPage.module.css?5ba5","pages/EnterNewPasswordPage/EnterNewPasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerForgotPassword\":\"EnterNewPasswordPage_containerForgotPassword__wlShj\",\"boxTextForgotPassword\":\"EnterNewPasswordPage_boxTextForgotPassword__qqoX8\",\"containerForForm\":\"EnterNewPasswordPage_containerForForm__KMRxV\",\"formEmail\":\"EnterNewPasswordPage_formEmail__ogeXx\",\"formInput\":\"EnterNewPasswordPage_formInput__zjEMM\",\"hasContent\":\"EnterNewPasswordPage_hasContent__-F8eq\",\"boxBtnSendEmail\":\"EnterNewPasswordPage_boxBtnSendEmail__jzhD0\",\"buttonSendEmail\":\"EnterNewPasswordPage_buttonSendEmail__JPDne\",\"errorMessage\":\"EnterNewPasswordPage_errorMessage__+zYzG\"};","import React from 'react'\nimport styles from './EnterNewPasswordPage.module.css';\nimport { useFormik } from \"formik\";\nimport { Notify } from \"notiflix\";\nimport * as Yup from \"yup\";\n// import { sendEmailForResetPassword } from '../../API/Auth/fetchRegisterUser';\n\nconst EnterNewPasswordPage = () => {\n  //  const [email, setEmail] = useState(\"\");\n  //  const [message, setMessage] = useState(\"\");\n  //  const [error, setError] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n    },\n\n    validationSchema: Yup.object({\n       password: Yup.string()\n              .min(8, \"Password must be at least 8 characters\") // Мінімум 8 символів\n              .matches(/[A-Z]/, \"Must contain at least one uppercase letter\") // Мінімум одна велика літера\n              .matches(/[a-z]/, \"Must contain at least one lowercase letter\") // Мінімум одна маленька літера\n              .matches(/[0-9]/, \"Must contain at least one number\") // Мінімум одна цифра\n              .required(\"Password is required\"), // Поле обов'язкове\n          }),\n    onSubmit: (values, { resetForm }) => {\n      sendNewPassword(values.password);\n      // console.log(\"Form data:\", values);\n      resetForm(); // Очищення форми після відправки\n    },\n  });\n\n  async function sendNewPassword(password) {\n    console.log(\"==============password======================\");\n    console.log(password);\n\n    try {\n      console.log(\"=================good===================\");\n      Notify.success(\"good\");\n      // const msg = await sendEmailForResetPassword(sendNewPassword);\n      // console.log(\"ForgotPasswordPage sendNewUserToDatabase\");\n      // console.log(msg);\n      // Notify.success(msg);\n    } catch (error) {\n      console.error(\"Error in sendNewPassword:\", error);\n      // Notify.failure(error);\n    }\n  }\n\n  return (\n    <div className={styles.containerForgotPassword}>\n      {/* Поле password */}\n      <div className={styles.boxTextForgotPassword}>Enter new password</div>\n      <div className={styles.containerForForm}>\n        <form className={styles.formEmail} onSubmit={formik.handleSubmit}>\n          <div\n            className={`${styles.formInput} ${\n              formik.values.email ? styles.hasContent : \"\"\n            }`}\n          >\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} // Додаткове відстеження втрати фокусу\n              value={formik.values.password}\n              required\n            />\n            <label htmlFor=\"password\">Password</label>\n            {formik.touched.password && formik.errors.password && (\n              <p className={styles.errorMessage}>{formik.errors.password}</p>\n            )}\n          </div>\n          {/* Кнопка Submit */}\n          <div className={styles.boxBtnSendEmail}>\n            <button className={styles.buttonSendEmail} type=\"submit\">\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EnterNewPasswordPage;\n"],"names":["EnterNewPasswordPage","formik","useFormik","initialValues","password","validationSchema","Yup","min","matches","required","onSubmit","values","_ref","resetForm","async","console","log","Notify","success","error","sendNewPassword","_jsxs","className","styles","children","_jsx","handleSubmit","email","type","id","name","onChange","handleChange","onBlur","handleBlur","value","htmlFor","touched","errors"],"sourceRoot":""}